// <auto-generated />
using System;
using ExamensarbeteNy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamensarbeteNy.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240609062921_addingKundkorgproduktToTable")]
    partial class addingKundkorgproduktToTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamensarbeteNy.Models.Bevakning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bevakningar");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.ChildKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("ChildKategorier");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorier");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Kundkorg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Kundkorgar");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.KundkorgProdukt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KundkorgId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KundkorgId");

                    b.HasIndex("ProduktId");

                    b.ToTable("KundkorgProdukt");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BildUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChildKategoriId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChildKategoriId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Produkter");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Bevakning", b =>
                {
                    b.HasOne("ExamensarbeteNy.Models.Produkt", "Produkt")
                        .WithMany("Bevakningar")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.ChildKategori", b =>
                {
                    b.HasOne("ExamensarbeteNy.Models.Kategori", "Kategori")
                        .WithMany("ChildKategorier")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.KundkorgProdukt", b =>
                {
                    b.HasOne("ExamensarbeteNy.Models.Kundkorg", "Kundkorg")
                        .WithMany("KundkorgProdukter")
                        .HasForeignKey("KundkorgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamensarbeteNy.Models.Produkt", "Produkt")
                        .WithMany("KundkorgProdukter")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kundkorg");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Produkt", b =>
                {
                    b.HasOne("ExamensarbeteNy.Models.ChildKategori", "ChildKategori")
                        .WithMany()
                        .HasForeignKey("ChildKategoriId");

                    b.HasOne("ExamensarbeteNy.Models.Kategori", "Kategori")
                        .WithMany("Produkter")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildKategori");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Kategori", b =>
                {
                    b.Navigation("ChildKategorier");

                    b.Navigation("Produkter");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Kundkorg", b =>
                {
                    b.Navigation("KundkorgProdukter");
                });

            modelBuilder.Entity("ExamensarbeteNy.Models.Produkt", b =>
                {
                    b.Navigation("Bevakningar");

                    b.Navigation("KundkorgProdukter");
                });
#pragma warning restore 612, 618
        }
    }
}
